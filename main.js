/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var p=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var b=(g,r)=>{for(var t in r)p(g,t,{get:r[t],enumerable:!0})},z=(g,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let e of F(r))!S.call(g,e)&&e!==t&&p(g,e,{get:()=>r[e],enumerable:!(s=y(r,e))||s.enumerable});return g};var w=g=>z(p({},"__esModule",{value:!0}),g);var x={};b(x,{default:()=>h});module.exports=w(x);var u=require("obsidian");function v(g,r){var s;let t=(s=this.app.metadataCache.getFileCache(g))==null?void 0:s.frontmatter;if(t)return r.find(e=>{let n=t[e.key];return n==null?!1:(Array.isArray(n)?n:[n]).some(o=>{let i=String(o);return e.value instanceof RegExp?(e.value.lastIndex=0,e.value.test(i)):i===e.value})})}function f(g){return g.map(r=>r.value instanceof RegExp?{key:r.key,value:r.value.source,destination:r.destination,isRegex:!0,flags:r.value.flags,debug:r.debug}:{key:r.key,value:r.value,destination:r.destination,debug:r.debug})}function R(g=[]){let r=[],t=[],s=[];return g.forEach((e,n)=>{if(e.isRegex)try{let a=new RegExp(e.value,e.flags),o={key:e.key,value:a,destination:e.destination,debug:e.debug};r.push(o),t.push({index:n,rule:o})}catch(a){let o=a instanceof Error?a.message:String(a),i=e.destination?` (destination: "${e.destination}")`:"",l=`[Obsidian Vault Organizer] Failed to deserialize regex for frontmatter rule "${e.key}"${i}: ${o}. Rule will be ignored.`;console.warn(l),s.push({index:n,message:o,rule:{...e},cause:a})}else{let a={key:e.key,value:e.value,destination:e.destination,debug:e.debug};r.push(a),t.push({index:n,rule:a})}}),{rules:r,successes:t,errors:s}}var E={rules:[]},h=class extends u.Plugin{constructor(){super(...arguments);this.rules=[];this.ruleParseErrors=[]}async onload(){await this.loadSettings(),this.updateRulesFromSettings();let t=async s=>{!(s instanceof u.TFile)||s.extension!=="md"||await this.applyRulesToFile(s)};this.registerEvent(this.app.vault.on("modify",t)),this.registerEvent(this.app.vault.on("create",t)),this.registerEvent(this.app.metadataCache.on("changed",async s=>{!(s instanceof u.TFile)||s.extension!=="md"||await this.applyRulesToFile(s)})),this.addCommand({id:"obsidian-vault-organizer-apply-rules",name:"Reorganize notes based on frontmatter rules",callback:async()=>{await this.reorganizeAllMarkdownFiles()}}),this.ruleSettingTab=new m(this.app,this),this.addSettingTab(this.ruleSettingTab)}onunload(){}async loadSettings(){let t=await this.loadData(),s=Array.isArray(t==null?void 0:t.rules)?[...t.rules]:[];this.settings={...E,...t,rules:s}}async saveSettings(){await this.saveData(this.settings)}updateRulesFromSettings(){let{rules:t,successes:s,errors:e}=R(this.settings.rules);return this.rules=t,this.ruleParseErrors=e,{successes:s,errors:e}}async persistSettingsAndRefreshRules(){var a;let{successes:t,errors:s}=this.updateRulesFromSettings(),e=f(t.map(o=>o.rule)),n=[...this.settings.rules];t.forEach((o,i)=>{n[o.index]=e[i]}),this.settings.rules=n,await this.saveSettings(),s.length&&s.forEach(o=>{let l=`Failed to parse regular expression for rule "${o.rule.key||"(unnamed rule)"}": ${o.message}`;new u.Notice(l)}),(a=this.ruleSettingTab)==null||a.refreshWarnings()}async saveSettingsWithoutReorganizing(){await this.persistSettingsAndRefreshRules()}async saveSettingsAndRefreshRules(){await this.persistSettingsAndRefreshRules(),await this.reorganizeAllMarkdownFiles()}getRuleErrorForIndex(t){return this.ruleParseErrors.find(s=>s.index===t)}async ensureFolderExists(t){if(!t||t==="."||t==="/")return;let s=(0,u.normalizePath)(t).split("/").filter(Boolean);if(!s.length)return;let e="";for(let n of s)e=e?`${e}/${n}`:n,!this.app.vault.getAbstractFileByPath(e)&&await this.app.vault.createFolder(e)}async applyRulesToFile(t){var s;try{if(!((s=this.app.metadataCache.getFileCache(t))==null?void 0:s.frontmatter))return;let n=v.call(this,t,this.rules);if(!n)return;let a=n.destination.trim();if(!a){if(n.debug){let l=this.app.vault.getName();new u.Notice(`DEBUG: ${t.basename} would not be moved because destination is empty in ${l}.`)}return}let o=(0,u.normalizePath)(a),i=(0,u.normalizePath)(`${a}/${t.name}`);if(t.path===i)return;if(n.debug){let l=this.app.vault.getName();new u.Notice(`DEBUG: ${t.basename} would be moved to ${l}/${a}`);return}await this.ensureFolderExists(o),await this.app.fileManager.renameFile(t,i)}catch(e){console.error("Failed to handle file change",e)}}async reorganizeAllMarkdownFiles(){var s,e;let t=(e=(s=this.app.vault).getMarkdownFiles)==null?void 0:e.call(s);if(t!=null&&t.length)for(let n of t)await this.applyRulesToFile(n)}},m=class extends u.PluginSettingTab{constructor(t,s){super(t,s);this.plugin=s,this.debouncedSaveOnly=(0,u.debounce)(async()=>{await this.plugin.saveSettingsWithoutReorganizing()},300)}scheduleSaveOnly(){this.debouncedSaveOnly()}cancelPendingSaveOnly(){this.debouncedSaveOnly.cancel()}display(){let{containerEl:t}=this;t.empty(),this.plugin.settings.rules.forEach((s,e)=>{let n=new u.Setting(t).setName(`Rule ${e+1}`).setDesc("Destination folder is required before the rule can move files.");n.settingEl.classList.add("setting-item");let a=document.createElement("div");a.classList.add("vault-organizer-rule-warning"),a.style.display="none",n.settingEl.appendChild(a);let o=()=>{let i=this.plugin.getRuleErrorForIndex(e);i?(n.settingEl.classList.add("vault-organizer-rule-error"),a.textContent=`Invalid regular expression: ${i.message}`,a.style.display=""):(n.settingEl.classList.remove("vault-organizer-rule-error"),a.textContent="",a.style.display="none")};n.addText(i=>i.setPlaceholder("key").setValue(s.key).onChange(l=>{let c=this.plugin.settings.rules[e];c&&(c.key=l,this.scheduleSaveOnly())})),n.addText(i=>i.setPlaceholder("value").setValue(s.value).onChange(l=>{let c=this.plugin.settings.rules[e];c&&(c.value=l,this.scheduleSaveOnly())})),n.addText(i=>i.setPlaceholder("destination folder (required)").setValue(s.destination).onChange(l=>{let c=this.plugin.settings.rules[e];c&&(c.destination=l,this.scheduleSaveOnly())})),n.addToggle(i=>{var l;return i.setTooltip("Treat value as a regular expression").setValue((l=s.isRegex)!=null?l:!1).onChange(async c=>{let d=this.plugin.settings.rules[e];d&&(d.isRegex=c,this.cancelPendingSaveOnly(),await this.plugin.saveSettingsAndRefreshRules())})}),n.addText(i=>{var l;return i.setPlaceholder("flags").setValue((l=s.flags)!=null?l:"").onChange(c=>{let d=this.plugin.settings.rules[e];d&&(d.flags=c,this.scheduleSaveOnly())})}),n.addToggle(i=>{var l;return i.setTooltip("Enable debug mode").setValue((l=s.debug)!=null?l:!1).onChange(async c=>{let d=this.plugin.settings.rules[e];d&&(d.debug=c,this.cancelPendingSaveOnly(),await this.plugin.saveSettingsAndRefreshRules())})}),n.addButton(i=>i.setButtonText("Remove").onClick(async()=>{this.plugin.settings.rules.splice(e,1),this.cancelPendingSaveOnly(),await this.plugin.saveSettingsWithoutReorganizing(),this.display()})),o()}),new u.Setting(t).addButton(s=>s.setButtonText("Add Rule").onClick(async()=>{this.plugin.settings.rules.push({key:"",value:"",destination:"",isRegex:!1,flags:"",debug:!1}),this.cancelPendingSaveOnly(),await this.plugin.saveSettingsWithoutReorganizing(),this.display()})),new u.Setting(t).addButton(s=>s.setButtonText("Apply now").onClick(async()=>{this.cancelPendingSaveOnly(),await this.plugin.saveSettingsAndRefreshRules()}))}refreshWarnings(){let{containerEl:t}=this;if(!t)return;t.querySelectorAll(".setting-item").forEach((e,n)=>{let a=e.querySelector(".vault-organizer-rule-warning");if(!a)return;let o=this.plugin.getRuleErrorForIndex(n);o?(e.classList.add("vault-organizer-rule-error"),a.textContent=`Invalid regular expression: ${o.message}`,a.style.display=""):(e.classList.remove("vault-organizer-rule-error"),a.textContent="",a.style.display="none")})}};
